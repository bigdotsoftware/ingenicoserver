swagger: "2.0"
info:
  description: "This is an Ingenico Server interface. How to start [https://blog.bigdotsoftware.pl/ingenico-server-pierwsze-uzycie/](https://blog.bigdotsoftware.pl/ingenico-server-pierwsze-uzycie/)"
  version: "2.0"
  title: "Ingenico Server (eService + Polcard First Data)"
  contact:
    email: "bigdotsoftware@bigdotsoftware.pl"
host: "localhost:3020"
basePath: "/"
tags:
- name: "License"
  description: "Manage your license"
  externalDocs:
    description: "Find out more"
    url: "https://blog.bigdotsoftware.pl/ingenico-server-licencja/"
- name: "Terminal (eService)"
  description: "Terminal operations"
  externalDocs:
    description: "Find out more"
    url: "https://bigdotsoftware.pl/short_link/ingenico"
- name: "Reports (eService)"
  description: "Transaction reports"
  externalDocs:
    description: "Find out more"
    url: "https://bigdotsoftware.pl/short_link/ingenico"
- name: "Analysis (eService)"
  description: "Transaction analysis"
  externalDocs:
    description: "Find out more"
    url: "https://bigdotsoftware.pl/short_link/ingenico"
- name: "DCC Analysis (eService)"
  description: "Transaction DCC analysis"
  externalDocs:
    description: "Find out more"
    url: "https://bigdotsoftware.pl/short_link/ingenico"  
- name: "Polcard: Terminal"
  description: "Terminal operations"
  externalDocs:
    description: "Find out more"
    url: "https://bigdotsoftware.pl/short_link/ingenico"
    
schemes:
- "http"
- "https"

paths:
  /license/v1/check:
    get:
      tags:
      - "License"
      summary: "Check the license details"
      description: "Shows details about used license, including expiration date. We strongly suggest to execute this method periodically in local monitoring system to verify license expiration date. Method can be used as a system heartbeat as well."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "json"
        description: "Pass ?json=true/false to change the output format"
        in: "query"
        type: "boolean"
        default: false
      responses:
        "200":
          description: "Invalid input"
          schema:
            $ref: "#/definitions/LicenseResponse"
            
  /license/v1/upgrade:
    post:
      tags:
      - "License"
      summary: "Obtain new license"
      description: "Forces to download new license when available. Note that Ingenico server renew licenses automatically 10 days before expiration date. Method can be used to renew license earlier."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LicenseResponse"

  /eservice/v1/ingenico_status:
    get:
      tags:
      - "Terminal (eService)"
      summary: "Terminal status"
      description: "The most used method. Depends from transactionStatus application need to act differently. When transactionStatus is 'WaitTrEnd' new transaction cannot be started, becuase terminal is waiting to finish current one. When transactionStatus is 'ReconciliationNeeded' - close the day from terminal (perform Reconciliation), but when 'BatchCompleted' - read the batch data first. Use this method periodically to test connection with terminal. When using /ingenico_auto_transaction_process - check result by calling /ingenico_auto_transaction_status/{uuid}"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTerminalStatusResponse"

  /eservice/v1/ingenico_general_info:
    get:
      tags:
      - "Terminal (eService)"
      summary: "Terminal information"
      description: "Returns general info about therminal."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTerminalInfoResponse"

  /eservice/v1/ingenico_auto_transaction_process:
    post:
      tags:
      - "Terminal (eService)"
      summary: "Start new transaction (automatic mode)"
      description: "Starts new transaction and doesn't wait for transaction message to be consumed by the terminal. Instead of that method returns 'uuid' which is an unique task identifier. Use 'uuid' to cancel or check status of auto transaction. Note that new transaction is possible only when value of transactionStatus retunred by /ingenico_status is 'Idle'. Use 'posnetserver' structure to integrate with Posnet fiscal printers (enable integration first in config.yaml file by setting config.posnetserver.active=true)."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - in: "body"
        name: "body"
        schema:
            $ref: "#/definitions/EserviceAutoTransactionBeginRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceAutoTransactionBeginResponse"
            
  /eservice/v1/ingenico_auto_transaction_cancel/{uuid}:
    post:
      tags:
      - "Terminal (eService)"
      summary: "Cancel auto transaction"
      description: "Use unique task identfier ('uuid') returned by /ingenico_auto_transaction_process to cancel transaction."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "uuid"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceAutoTransactionCancelResponse"
  
  /eservice/v1/ingenico_auto_transaction_status/{uuid}:
    get:
      tags:
      - "Terminal (eService)"
      summary: "Status of automatic transaction"
      description: "Use unique task identfier ('uuid') returned by /ingenico_auto_transaction_process to check status of individual automatic transaction."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "uuid"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceAutoTransactionStatusResponse"
            
  /eservice/v1/ingenico_auto_transaction_statuses:
    get:
      tags:
      - "Terminal (eService)"
      summary: "List all auto transactions"
      description: "Returns list of all executed automatic transactions with statuses."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceAutoTransactionStatusesResponse"
  
  /eservice/v1/ingenico_transaction:
    post:
      tags:
      - "Terminal (eService)"
      summary: "Start new transaction"
      description: "Starts new transaction and wait for transaction message to be consumed by the terminal. Field 'sequenceNb' is mandatory but for 'completion' and 'reversal' types only. Set it to '-' for other types. New transaction is possible only when value of transactionStatus retunred by /ingenico_status is 'Idle'. Use 'posnetserver' structure to integrate with Posnet fiscal printers (enable integration first in config.yaml file by setting config.posnetserver.active=true)."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - in: "body"
        name: "body"
        schema:
            $ref: "#/definitions/EserviceTransactionBeginRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionBeginResponse"

  /eservice/v1/ingenico_transaction_end:
    get:
      tags:
      - "Terminal (eService)"
      summary: "Finish current transaction"
      description: "Transaction can be finished when value of transactionStatus retunred by /ingenico_status is 'WaitTrEnd'."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionEndResponse"
  
  /eservice/v1/ingenico_transaction_last/{transactionIndex}:
    get:
      tags:
      - "Terminal (eService)"
      summary: "Read last transaction data"
      description: "Parameter transactionIndex is counted from 1."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "transactionIndex"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionLastResponse"
            
  /eservice/v1/ingenico_transaction_data_input:
    post:
      tags:
      - "Terminal (eService)"
      summary: "Terminal remote control"
      description: "Provide details during transaction processing. Send characters to remotely control terminal, like accept/decline signature, enter authorization code etc"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - in: "body"
        name: "body"
        schema:
            $ref: "#/definitions/EserviceTransactionDataInputRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionDataInputResponse"
       
  /eservice/v1/ingenico_transaction_send_key:
    post:
      tags:
      - "Terminal (eService)"
      summary: "Terminal remote control"
      description: "Send remotely control terminal, like accept/decline/back"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - in: "body"
        name: "body"
        schema:
            $ref: "#/definitions/EserviceTransactionSendKeyRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionSendKeyResponse"
            
  /eservice/v1/ingenico_set_parameter:
    post:
      tags:
      - "Terminal (eService)"
      summary: "Set terminal parameters"
      description: "Set terminal parameters"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - in: "body"
        name: "body"
        schema:
            $ref: "#/definitions/EserviceTransactionSetParameterRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionSetParameterResponse"

  /eservice/v1/ingenico_set_standby:
    post:
      tags:
      - "Terminal (eService)"
      summary: "Standby mode"
      description: "Put the terminal in Standby mode (power saving)"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - in: "body"
        name: "body"
        schema:
            $ref: "#/definitions/EserviceTransactionSetStandbyRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionSetStandbyResponse"
            
  /eservice/v1/ingenico_batch_recon_data/{transactionIndex}:
    get:
      tags:
      - "Terminal (eService)"
      summary: "Read single transaction from batch"
      description: "Terminal must be in 'BatchCompleted' state. Parameter transactionIndex is counted from 1."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "transactionIndex"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionReconDataResponse"
    
  /eservice/v1/ingenico_batch_recon_info:
    get:
      tags:
      - "Terminal (eService)"
      summary: "Read summary batch data"
      description: "Batch data can be read when value of transactionStatus retunred by /ingenico_status is 'BatchCompleted'. Method clears the batch and /ingenico_transaction_recon_data don't return any data until next reconciliation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceTransactionReconInfoResponse"
            
  /eservice/v1/ingenico_report_generate:
    post:
      tags:
      - "Reports (eService)"
      summary: "Prepare terminal report"
      description: "Prepares a terminal report. To access report data use /ingenico_report_details with 'cardset' counted from 1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "reset"
        in: "query"
        type: "boolean"
        default: false
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceReportGenerateResponse"

  /eservice/v1/ingenico_report_details/{cardset}:
    get:
      tags:
      - "Reports (eService)"
      summary: "Terminal report details"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "cardset"
        in: "path"
        description: ""
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceReportDetailsResponse"
  
  /eservice/v1/ingenico_report_summary:
    get:
      tags:
      - "Reports (eService)"
      summary: "Terminal report total details"
      description: "Returns totals from all transactions prepared by /ingenico_report_generate. Method clears current report details - to access totals again, request /ingenico_report_generate again."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceReportTotalSummaryResponse"
            
  /eservice/v1/ingenico_analysis_generate:
    post:
      tags:
      - "Analysis (eService)"
      summary: "Prepare transaction analysis"
      description: "Prepares a terminal report since last EOD report. To access report data use /ingenico_analysis_summary or /ingenico_analysis_details with 'transactionIndex' counted from 1. Reconciliation erases report data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceAnalysisGenerateResponse"

  /eservice/v1/ingenico_analysis_details/{transactionIndex}:
    get:
      tags:
      - "Analysis (eService)"
      summary: "Analysis details"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "transactionIndex"
        in: "path"
        description: ""
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceAnalysisDetailsResponse"
  
  /eservice/v1/ingenico_analysis_summary:
    get:
      tags:
      - "Analysis (eService)"
      summary: "Analysis total summary"
      description: "Returns totals from all transactions prepared by /ingenico_analysis_generate. Method clears current report details - to access totals again, request /ingenico_analysis_generate again."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceAnalysisTotalSummaryResponse"
            
  /eservice/v1/ingenico_dcc_analysis_generate:
    post:
      tags:
      - "DCC Analysis (eService)"
      summary: "Prepare transaction analysis"
      description: "Prepares a terminal report. To access report data use /ingenico_analysis_summary"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceDCCAnalysisGenerateResponse"

  /eservice/v1/ingenico_dcc_analysis_details/{transactionIndex}:
    get:
      tags:
      - "DCC Analysis (eService)"
      summary: "Analysis details"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      - name: "transactionIndex"
        in: "path"
        description: ""
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceDCCAnalysisDetailsResponse"
  
  /eservice/v1/ingenico_dcc_analysis_summary:
    get:
      tags:
      - "DCC Analysis (eService)"
      summary: "Analysis total summary"
      description: "Returns totals from all transactions prepared by /ingenico_report_summary. Method clears current report details - to access totals again, request /ingenico_report_generate again."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - name: "cashRegisterNumber"
        in: "query"
        type: "integer"
        default: 1
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EserviceDCCAnalysisTotalSummaryResponse"
            
  /polcard/v1/ingenico_transaction:
    post:
      tags:
      - "Polcard: Terminal"
      summary: "Start new transaction"
      description: "Starts new transaction and wait for transaction message to be consumed by the terminal. Use 'posnetserver' structure to integrate with Posnet fiscal printers (enable integration first in config.yaml file by setting config.posnetserver.active=true)."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        schema:
            $ref: "#/definitions/PolcardTransactionBeginRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PolcardTransactionActionResponse"

  /polcard/v1/ingenico_transaction_end:
    get:
      tags:
      - "Polcard: Terminal"
      summary: "Mark current transaction finished"
      description: "Transaction can be finished when value of transactionStatus retunred by /ingenico_status is 'WaitTrEnd'."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "fulldebug"
        in: "query"
        type: "boolean"
        default: false
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PolcardTransactionEndResponse"


definitions:

  EserviceAutoTransactionBeginRequest:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionBeginRequest'
    properties:
      callback:
        type: "object"
        properties:
          uri:
            type: "string"
          method:
            type: "string"
            enum:
              - "POST"
              - "GET"
              - "PUT"
      posnetserver:
        type: "object"
        description:  "Sample JSON object: {\"lines\": [{ \"na\": \"Towar 1\", \"il\": 1.0, \"vtp\": \"23,00\", \"pr\": 2350 },{ \"na\": \"Towar 2\", \"il\": 1.0, \"vtp\": \"23,00\", \"pr\": 1150 }], \"summary\": { \"to\": 3500 } }. PosnetServer documentation can be found here: https://blog.bigdotsoftware.pl/posnet-server-wydruk-paragonu/"
        
  EserviceTransactionBeginRequest:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
         - "purchase"
         - "preauthorization"
         - "completion"
         - "preauthorization_cancel"
         - "refund"
         - "reversal"
         - "giftcard_activation"
         - "giftcard_balance"
         - "giftcard_topup"
         - "reconciliation"
         - "connection_test"
         - "tms"
      amount:
        type: "integer"
      title:
        type: "string"
      sequenceNb:
        type: "string"
      arguments:
        type: "object"
        properties:
          transactionFlags: 
            type: "array"
            items:
              type: "string"
              enum:
                - "TokenGeneration"
                - "ReferenceNumberGeneration"
                - "TransitTransactionIndicator"
          blikCode:
            type: "number"
          additionalPrintout: 
            type: "string"
          hints: 
            type: "string"
          rfu: 
            type: "string"
          variableSymbol: 
            type: "string"
          specificSymbol: 
            type: "string"
          saleItemList: 
            type: "array"
            items:
              type: "object"
              properties:
                itemId: 
                  type: "string"
                productCode: 
                  type: "string"
                amount: 
                  type: "number"
                  format: "int32"
                unitMeasure: 
                  type: "string"
                unitPrice: 
                  type: "number"
                  format: "int32"
                quantity: 
                  type: "number"
                taxCode: 
                  type: "number"

  EserviceTransactionDataInputRequest:
    type: "object"
    properties:
      text:
        type: "string"
      sequenceNb:
        type: "string"
  
  EserviceTransactionSetStandbyRequest:
    type: "object"
    properties:
      timeoutSeconds:
        type: "number"
        format: "int32"
        
  EserviceTransactionSetParameterRequest:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
          - "volatile"
          - "permanent"
      parameters:
        type: "array"
        items:
          type: "object"
          properties:
            key:
              type: "string"
            value:
              type: "string"
        
  EserviceTransactionSendKeyRequest:
    type: "object"
    properties:
      keycode:
        type: "string"
        enum:
          - "ok"
          - "back"
          - "cancel"
      sequenceNb:
        type: "string"
  EserviceTransactionCommonGenerateResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, 1 - Error, 2 - Function code unknown, 3 - Wrong function arguments, 7 - Wrong order of calls, 8 - Requested data not available, 9 -Not enough memory to process request"
          firstTransaction:
            type: "integer"
            format: "int32"
          lastTransaction:
            type: "integer"
            format: "int32"
  
  EserviceReportGenerateResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGenerateResponse'
      
  EserviceAnalysisGenerateResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGenerateResponse'
  
  EserviceDCCAnalysisGenerateResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGenerateResponse'
      
      
  EserviceReportDetailsResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGetDetailsResponse'
      
  EserviceAnalysisDetailsResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionEndResponse'
      
  EserviceDCCAnalysisDetailsResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGetDetailsResponse'
      

  EserviceReportTotalSummaryResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGetDetailsResponse'
  
  EserviceAnalysisTotalSummaryResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGetDetailsResponse'
  
  EserviceDCCAnalysisTotalSummaryResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionCommonGetDetailsResponse'
      
  EserviceTransactionCommonGetDetailsResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, 1 - Error, 2 - Function code unknown, 3 - Wrong function arguments, 7 - Wrong order of calls, 8 - Requested data not available, 9 -Not enough memory to process request"
          summaryTitle:
            type: "string"
          reportEntries:
            type: "array"
            description: "examples: [\"SPRZEDAŻ|13|13000\",\"ZWROTY|0|0\",\"DOP.PRE-AUT.|0|0\",\"RAZEM|13|13000\",\"WYPŁATA GOTÓWKI|0|0\"] or [\"SPRZEDAŻ|1|1000\", \"UNIEWAŻ.SPRZEDAŻY|0|0\", \"WYPŁATA GOTÓWKI|0|0\", \"W TYM NAPIWKI|0|0\", \"ZWROTY|0|0\", \"DOP.PRE-AUT.|0|0\", \"UNIE.DOP.PRE-AUT.|0|0\", \"RAZEM|1|1000\", \"PRE-AUTORYZACJA|0|0\", \"ZWIĘKSZ. PRE-AUT.|0|0\", \"Anulow. preautory.|0|0\" ]"
            items:
              type: "string"
  
  
  EserviceTransactionDataInputResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/ApiResponse'
      
  EserviceTransactionSetParameterResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionDataInputResponse'
  
  EserviceTransactionSetStandbyResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionDataInputResponse'
  
  EserviceTransactionSendKeyResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionDataInputResponse'

  EserviceTransactionReconDataResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionEndResponse'
  EserviceTransactionLastResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionEndResponse'
      
  EserviceTransactionReconInfoResponse:
    type: "object"
    required: [ "terminal" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, 1 - Error, 2 - Function code unknown, 3 - Wrong function arguments, 7 - Wrong order of calls, 8 - Requested data not available, 9 -Not enough memory to process request"
          error:
            type: "string"
          resultsObject:
            type: "object"
            properties:
              totalAmount:
                type: "string"
              transactionCount:
                type: "string"
              status:
                description: "0 – success 1 – error 2 – success, but not completed preauthorizations were present in batch – unattended terminals only 4 – success, but TMS connection is required"
                type: "string"
              statusText:
                type: "string"
                enum:
                  - "success"
                  - "error"
                  - "success_with_not_completed_preauthorizations"
                  - "success_tms_required"
                  - "unknown"
              acquirerIdentifier:
                type: "string"
              batchNumber:
                type: "string"
              date:
                type: "string"
                description: "format: YYYY.MM.DD"
              time:
                type: "string"
                description: "format: hh:mm:ss"
              printingIndicator:
                type: "string"
              tid:
                type: "string"
              activationSequenceNb:
                type: "string"
              cashierIdentifier:
                type: "string"
              eVoucherInfo:
                type: "string"
              giftcardInfo:
                type: "string"
          results:
            type: "array"
            description: "example: [{\"arg0\":\"-17000\"},{\"arg1\":\"0\"},{\"arg2\":\"1\"},{\"arg3\":\"\"}.....]"
            items:
              type: "object"
            
  
  EserviceTransactionEndResponse:
    type: "object"
    required: [ "terminal" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, 1 - Error, 2 - Function code unknown, 3 - Wrong function arguments, 7 - Wrong order of calls, 8 - Requested data not available, 9 -Not enough memory to process request"
          transactionType:
            type: "integer"
          transactionResultCode:
            type: "integer"
          transactionResultCodeText:
            type: "string"
          transactionNumber:
            type: "integer"
          transactionDetails:
            type: "object"
            properties:
              authorizationCode:
                type: "string"
              serverMessage:
                type: "string"
              merchantID:
                type: "string"
                description: "example '454500000000000'"
              maskedCardNumber:
                type: "string"
                description: "example '************0211'"
              date: 
                type: "string"
                description: "example format 2021.01.25"
              time:
                type: "string"
                description: "example format 12:59:32"
              cardsetName:
                type: "string"
                description: "example 'VISA'"
              readerUsed:
                type: "string"
                description: "example 'C' - possible values: B Contactless, M Manual, C Magstripe, P ICC, ? Unknown"
              readerUsedText:
                type: "string"
                description: "possible values 'magstripe', 'contactless', 'manual', 'icc', 'unknown'"
              terminalIdentifier:
                type: "string"
                description: "example '45450318'"
              authorizationMessage:
                type: "string"
                description: "example '000180'"
              authorizationType:
                type: "string"
                description: "possible values 1 - online, 3 – offline, 4 – referral"
              authorizationTypeText:
                type: "string"
                description: "possible values 'online', 'offline', 'referral'"
              transactionAmount:
                type: "string"
              cardholderAuthorizationMethod:
                type: "string"
                description: "possible values A – PIN, @ - Signature, B – PIN and Signature, ? – no authorization"
              cardholderAuthorizationMethodText:
                type: "string"
                description: "possible values 'pin', 'signature', 'pin_signature', 'no authorization', 'unknown'"
              atc:
                type: "string"
              ac:
                type: "string"
              aid:
                type: "string"
              tvr:
                type: "string"
              tsi:
                type: "string"
              title:
                type: "string"
              printingIndicator:
                type: "string"
              transactionCurrency: 
                type: "string"
                description: "example 'PLN'"
              terminalCurrency:
                type: "string"
              exchangeRate:
                type: "string"
              dcc1:
                type: "string"
              dcc2:
                type: "string"
              cashAmount:
                type: "string"
              spendingAmount:
                type: "string"
              dcc_currencyExp:
                type: "string"
              additionalInformation:
                type: "string"
                description: "example 'DF060A534E204E722056697361DF0B0400000100' or 'DF0B0400000100' or 'DF060A534E204E722056697361DF0B0400000400DF1318343534353033313830303031323630313231323132383534'"
              additionalInformationObject:
                type: "object"
                properties:
                  blikReferenceCode:
                    type: "string"
                  blikEnteredCode:
                    type: "string"
                  cardToken:
                    type: "string"
                  emv:
                    type: "string"
                  cardExpiryDate:
                    type: "string"
                  valueToPrint:
                    type: "array"
                    items:
                      type: "string"
                  transactionFlagsObject:
                    type: "array"
                    items:
                      type: "string"
                  transactionFlags:
                    type: "string"
                  pan:
                    type: "string"
                  voucherTypeName:
                    type: "string"
                  discountAmount:
                    type: "string"
                  preauthAmountTotal:
                    type: "string"
                  preauthAmountTotalTerminalCcy:
                    type: "string"
                  printout:
                    type: "string"
                  tipAmount:
                    type: "string"
                  referenceNumber:
                    type: "string"
                  dccValue:
                    type: "string"
                  dccText:
                    type: "string"
                  dccInfo:
                    type: "string"
                  dccRatesText:
                    type: "string"
                  variableSymbol:
                    type: "string"
                  specificSymbol:
                    type: "string"
  
  PolcardTransactionEndResponse:
    type: "object"
    required: [ "terminal" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, any other value means error. Attribute 'error' contains human readable error."
          messagePart:
            type: "integer"
          readerType:
            type: "string"
            enum:
              - "ok_icc_card_contactless"
              - "ok_magnetic_card_magstripe"
              - "ok_magnetic_card_contactless"
              - "ok_emv_card_magstripe"
              - "ok_emv_card_icc"
              - "me_card_entered_manually"
              - "error_read_icc_fallback_allowed"
              - "error_read_icc_fallback_not_allowed"
              - "error_read_track2_or_carddata"
              - "error_nocard_timeout"
          authorizationResult:
            type: "string"
            enum:
              - "base_approval"
              - "base_partial_approval"
              - "base_refusal"
              - "base_transaction_not_found"
              - "base_transaction_settled"
              - "base_transaction_not_approved"
              - "base_transaction_and_reverdal_amounts_dont_match"
              - "base_acceptor_unable_to_complete"
              - "base_multi_merchant_config_incorrect_or_profile_not_supported"
              - "base_batch_full_upload_required"
              - "base_rejected_card_system_dont_match_pan"
              - "base_rejected_card_system_not_set"
              
              - "deposit_terminal_daily_limit_exceeded"
              - "deposit_card_daily_limit_exceeded"
              - "deposit_card_daily_quantity_exceeded"
              - "deposit_customer_registration_required"
              
              - "loyalty_unable_to_read_card"
              - "loyalty_not_recognized_card"
              
              - "fleet_not_recognized_card"
              - "fleet_chip_error"
              - "fleet_card_expired"
              
              - "preauthorization_not_found"
              - "preauthorization_amount_too_small"
              - "preauthorization_cannot_resolve_token"
              
              - "purchaseadj_amount_correction_disabled"
              - "purchaseadj_missing_last_transaction"
              - "purchaseadj_incorrect_transaction_or_amount"
              - "purchaseadj_transaction_not_approved"
              - "purchaseadj_unable_to_complete"
              - "purchaseadj_battery_too_low"
              - "purchaseadj_gsm_signal_too_low"
              
              - "unknown"
          transactionDetails:
            type: "object"
                    
  EserviceTransactionBeginResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceTransactionActionResponse'
      
  EserviceTransactionActionResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/ApiResponse'

  EserviceAutoTransactionStatusCommonResponse:
    type: "object"
    properties:
      state:
        type: "string"
        enum:
        - "success"
        - "error"
        - "cancelled"
        - "processing"
      ts:
        type: "integer"
        format: "int64"
      req:
        type: "object"
        allOf:
          - $ref: "#/definitions/EserviceTransactionBeginRequest"
      result:
        type: "object"
        allOf:
          - $ref: "#/definitions/EserviceTransactionEndResponse"
          - $ref: "#/definitions/EserviceTerminalStatusResponse"
          
  EserviceAutoTransactionStatusResponse:
    type: "object"
    required: [ "uuid" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
      - $ref: '#/definitions/EserviceAutoTransactionStatusCommonResponse'

  
  EserviceAutoTransactionStatusesResponse:
    type: "object"
    properties:
      <uuid>:
        type: "object"
        allOf:
          - $ref: '#/definitions/EserviceAutoTransactionStatusCommonResponse'
      
  EserviceAutoTransactionCancelResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceAutoTransactionActionResponse'
      
  EserviceAutoTransactionBeginResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/EserviceAutoTransactionActionResponse'
      
  EserviceAutoTransactionActionResponse:
    type: "object"
    required: [ "uuid" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      uuid:
        type: "string"
        
  EserviceTerminalInfoResponse:
    type: "object"
    required: [ "terminal" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, 1 - Error, 2 - Function code unknown, 3 - Wrong function arguments, 7 - Wrong order of calls, 8 - Requested data not available, 9 -Not enough memory to process request"
          terminalInfoText:
            type: "string"
            description: "terminalInfoText is returned only when it cannot be parsed into terminalInfo object"
          terminalInfo:
            type: "object"
            properties:
              addressLine1:
                type: "string"
              addressLine2:
                type: "string"
              addressLine3:
                type: "string"
              merchantIdentifier:
                type: "string"
              terminalIdentifier:
                type: "string"

  EserviceTerminalStatusResponse:
    type: "object"
    required: [ "terminal" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, 1 - Error, 2 - Function code unknown, 3 - Wrong function arguments, 7 - Wrong order of calls, 8 - Requested data not available, 9 -Not enough memory to process request"
          transactionStatus:
            type: "integer"
            format: "int32"
          transactionStatusText:
            type: "string"
            enum:
            - "Idle"
            - "WaitCard"
            - "WaitPIN"
            - "WaitEMVApp"
            - "WaitHost"
            - "WaitSign"
            - "WaitTrEnd"
            - "WaitNoCard"
            - "WaitBusy"
            - "InProgress"
            - "WaitCopy"
            - "WaitAuthCode"
            - "WaitAction"
            - "BatchCompleted"
            - "DCCCurrency"
            - "CashBackAmount"
            - "UsedInternaly"
            - "TransactionAccepted"
            - "WaitingForAmount"
            - "WaitingForSelection"
            - "AskingEcrToPrintData"
            - "PresentingZenCardOffer"
            - "WaitingForFid"
            - "AskingEcrToReceiveData"
            - "ZencardContinue"
            - "ApplicationInErrorState"
            - "ReconciliationNeeded"
          sequenceNb:
            type: "string"
          charsMin:
            type: "number"
          charsMax:
            type: "number"
          charsAllowed:
            type: "string"
            enum:
            - "numeric"
            - "alphanumeric"
            - "ascii"
            - "unknown"
          specialCharsAllowed:
            type: "string"
            enum:
            - "ok"
            - "cancel"
            - "ok_cancel"
            - "back"
            - "ok_back"
            - "back_cancel"
            - "ok_back_cancel"
            - "other"
          promptText:
            type: "string"
            
            
  PolcardTransactionBeginRequest:
    type: "object"
    properties:
      transport:
        type: "object"
        properties:
          encryptSession:
            type: "boolean"
            default: false
          encryptAlgorithm:
            type: "string"
            enum:
            - "NONE"
            - "DES"
            - "3DES"
            - "AES"
          sessionKeyLen:
            type: "integer"
          publicKey:
            type: "string"
      type:
        type: "string"
        enum:
        - "purchase"
        - "purchase_cashback"
        - "cash_from_pos"
        - "preauthorization"
        - "completion"
        - "refund"
        - "activate_service_mode"
        - "deactivate_service_mode"
        - "card_verification"
        - "preauthorization_increase"
        - "preauthorization_reduce"
        - "preauthorization_cancel"
        - "fleet_card_sale"
        - "loyalty_card"
        - "card_activation"
        - "replenishment"
        - "balance_inquiry"
        - "purchase_with_registration"
        - "card_registration"
        - "purchase_adjustment"
        - "cash_deposit"
        - "no_show"
        - "delayed_charges"
      transactionAmount:
        type: "integer"
      cashbackAmount:
        type: "integer"
      tipAmount:
        type: "integer"
      surchargeFeeAmount:
        type: "integer"
      foreignGoodsAmount:
        type: "integer"
      currencyCode:
        type: "integer"
        default: 985
        description: "Must be valid ISO-4217 number (https://en.wikipedia.org/wiki/ISO_4217). PLN is a default value."
      
  PolcardTransactionActionResponse:
    type: "object"
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      terminal:
        type: "object"
        properties:
          returnCode:
            type: "integer"
            format: "int32"
            description: "0 - Success, any other value means error. Attribute 'error' contains human readable error."
          error:
            type: "string"
            description: "Error massge from device. Filled when returnCode<>0"
          display:
            type: "string"
            enum:
            - "cardholder_and_clerk"
            - "cardholder"
            - "clerk"
            description: "Determines where message should be displayed"
          keyboardOptions:
            type: "string"
            enum:
            - "display_only"
            - "yes_no"
            - "amount"
            - "commercial_code"
            - "authorization_code"
            - "one_of"
            - "merchant_profile"
            - "any_key"
            - "variable_options"
          timeout:
            type: "integer"
            description: "Timeout for message to be displayed"
                  
  LicenseResponse:
    type: "object"
    required: [ "validTo", "licenseTo", "expired" ]
    allOf:
      - $ref: '#/definitions/ApiResponse'
    properties:
      validTo:
        type: "string"
      licenseTo:
        type: "string"
      expired:
        type: "boolean"
  ApiResponse:
    type: "object"
    required: [ "ok", "watermark" ]
    properties:
      ok:
        type: "boolean"
        description: "Check the 'error' or 'terminal.error' ields when 'ok' is 'false'"
      error:
        type: "string"
        description: "Error from RESTful API filled only when 'ok' field is 'false'. Errors returned by terminal (in case of successfully established connection) are returned inside the 'terminal.error' struct"
      text:
        type: "string"
      watermark:
        type: "string"
externalDocs:
  description: "Find out more about our website"
  url: "https://bigdotsoftware.pl/ingenicoserver-restful-service-dla-terminali-platniczych/"